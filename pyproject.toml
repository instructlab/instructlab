# SPDX-License-Identifier: Apache-2.0

[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "instructlab"
authors = [{ name = "InstructLab", email = "dev@instructlab.ai" }]
description = "CLI for interacting with InstructLab"
readme = "README.md"
license = { text = "Apache-2.0 AND MIT" }
requires-python = ">=3.9"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Environment :: Console",
  "License :: OSI Approved :: Apache Software License",
  "License :: OSI Approved :: MIT License",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: POSIX :: Linux",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
]
dynamic = ["dependencies", "optional-dependencies", "version"]

[project.scripts]
# defines ilab executable
ilab = "instructlab.lab:ilab"

[project.urls]
homepage = "https://instructlab.ai"
source = "https://github.com/instructlab/instructlab"
issues = "https://github.com/instructlab/instructlab/issues"

[tool.setuptools_scm]
version_file = "src/instructlab/_version.py"
# do not include +gREV local version, required for Test PyPI upload
local_scheme = "no-local-version"

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.setuptools.packages.find]
where = ["src"]
include = [
  "instructlab",
  "instructlab.chat",
  "instructlab.generator",
  "instructlab.train",
  "instructlab.train.lora_mlx",
  "instructlab.train.lora_mlx.models",
  "instructlab.llamacpp",
  "instructlab.mlx_explore",
]

[tool.check-wheel-contents]
# W002 - Wheel contains duplicate files:
#  instructlab/mlx_explore/LICENSE
#  instructlab/train/lora_mlx/LICENSE
ignore = ["W002"]

[tool.ruff]
target-version = "py39"
# same as black's default line length
line-length = 88

[tool.ruff.lint]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Fixers will be enabled gradually.
select = [
  # "B",  # flake8-bugbear
  # "E",  # pycodestyle
  # "F",  # Pyflakes
  "Q", # flake8-quotes
  # Ruff does not support isort's import_headings feature, yet.
  # "I",  # isort
  # "UP",  # pyupgrade
  # "SIM",  # flake8-simplify
  "TID", # flake8-tidy-imports
]
ignore = [
  # some embedded strings are longer than 88 characters
  "E501",   # line too long
  "TID252", # Prefer absolute imports over relative imports from parent modules
]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"yamllint".msg = "yamllint is for CLI usage only."

[tool.ruff.lint.isort]
# same as .isort.cfg
from-first = true
# not supported yet
# import-heading-future=Future
# import-heading-stdlib=Standard
# import-heading-thirdparty=Third Party
# import-heading-firstparty=First Party
# import-heading-localfolder=Local
known-local-folder = ["tuning"]

[tool.mypy]
disable_error_code = ["import-not-found", "import-untyped"]
exclude = [
  "^src/instructlab/model/chat\\.py$",
  "^src/instructlab/model/convert\\.py$",
  "^src/instructlab/model/download\\.py$",
  "^src/instructlab/model/test\\.py$",
  "^src/instructlab/model/serve\\.py$",
  "^src/instructlab/model/list\\.py$",
  "^src/instructlab/model/model\\.py$",
  "^src/instructlab/model/train\\.py$",
  "^src/instructlab/config/config\\.py$",
  "^src/instructlab/config/init\\.py$",
  "^src/instructlab/data/data\\.py$",
  "^src/instructlab/data/generate\\.py$",
  "^src/instructlab/data/generator/generate_data\\.py$",
  "^src/instructlab/data/generator/utils\\.py$",
  "^src/instructlab/taxonomy/taxonomy\\.py$",
  "^src/instructlab/taxonomy/diff\\.py$",
  "^src/instructlab/llamacpp/llamacpp_convert_to_gguf\\.py$",
  "^src/instructlab/mlx_explore/gguf_convert_to_mlx\\.py$",
  "^src/instructlab/mlx_explore/utils\\.py$",
  "^src/instructlab/train/lora_mlx/lora\\.py$",
  "^src/instructlab/train/lora_mlx/models/llama\\.py$",
  "^src/instructlab/train/lora_mlx/models/mixtral\\.py$",
  "^src/instructlab/train/lora_mlx/models/models\\.py$",
  "^src/instructlab/utils\\.py$",
  "^src/instructlab/model/backends/llama\\.py$",
]
# honor excludes by not following there through imports
follow_imports = "silent"
