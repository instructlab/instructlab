# SPDX-License-Identifier: Apache-2.0

name: Build, test, and upload PyPI package

on:
    push:
        branches:
            - main
            - "release-**"
        tags:
            - "v*"
    pull_request:
        branches:
            - main
            - "release-**"
    release:
        types:
            - published

env:
    LC_ALL: en_US.UTF-8

defaults:
    run:
        shell: bash

permissions:
    contents: read

jobs:
    # Create and verify release artifacts
    # - build source dist (tar ball) and wheel
    # - validate artifacts with various tools
    # - upload artifacts to GHA
    build-package:
        name: Build and check packages
        runs-on: ubuntu-latest
        steps:
            - name: "Harden Runner"
              uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
              with:
                  egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

            - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
              with:
                  # for setuptools-scm
                  fetch-depth: 0

            - name: Install dependent PRs if needed
              uses: depends-on/depends-on-action@61cb3f4a0e2c8ae4b90c9448dc57c7ba9ca24c35 # main
              with:
                token: ${{ secrets.GITHUB_TOKEN }}

            - uses: hynek/build-and-inspect-python-package@b5076c307dc91924a82ad150cdd1533b444d3310 # v2.12.0

    # push to Test PyPI on
    # - a new GitHub release is published
    # - a PR is merged into main branch
    publish-test-pypi:
        name: Publish packages to test.pypi.org
        # environment: publish-test-pypi
        if: |
            github.repository_owner == 'instructlab' && (
                github.event.action == 'published' ||
                (github.event_name == 'push' && github.ref == 'refs/heads/main')
            )
        permissions:
            contents: read
            # see https://docs.pypi.org/trusted-publishers/
            id-token: write
        runs-on: ubuntu-latest
        needs: build-package

        steps:
            - name: "Harden Runner"
              uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
              with:
                  egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

            - name: Fetch build artifacts
              uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
              with:
                  name: Packages
                  path: dist

            - name: Upload to Test PyPI
              uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
              with:
                  repository-url: https://test.pypi.org/legacy/
                  verbose: true

    # push to Production PyPI on
    # - a new GitHub release is published
    publish-pypi:
        name: Publish release to pypi.org
        # environment: publish-pypi
        if: |
            github.repository_owner == 'instructlab' && github.event.action == 'published'
        permissions:
            # see https://docs.pypi.org/trusted-publishers/
            id-token: write
            # allow gh release upload
            contents: write

        runs-on: ubuntu-latest
        needs: build-package

        steps:
            - name: "Harden Runner"
              uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
              with:
                  egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

            - name: Fetch build artifacts
              uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
              with:
                  name: Packages
                  path: dist

            - uses: sigstore/gh-action-sigstore-python@f514d46b907ebcd5bedc05145c03b69c1edd8b46 # v3.0.0
              with:
                  inputs: >-
                      ./dist/*.tar.gz
                      ./dist/*.whl
                  release-signing-artifacts: false

            - name: Upload artifacts and signatures to GitHub release
              env:
                  GITHUB_TOKEN: ${{ github.token }}
              run: >-
                  gh release upload '${{ github.ref_name }}' dist/* --repo '${{ github.repository }}'

            # PyPI does not accept .sigstore artifacts and
            # gh-action-pypi-publish has no option to ignore them.
            - name: Remove sigstore signatures before uploading to PyPI
              run: rm ./dist/*.sigstore.json

            - name: Upload to PyPI
              uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
              with:
                verbose: true
