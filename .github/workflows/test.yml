# SPDX-License-Identifier: Apache-2.0

name: Test

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "release-**"
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'requirements*.txt'
      - 'tox.ini'
      - 'scripts/*.sh'
      - '.github/**'
  pull_request:
    branches:
      - "main"
      - "release-**"
    paths:
      - '**.py'
      - 'pyproject.toml'
      - 'requirements*.txt'
      - 'tox.ini'
      - 'scripts/*.sh'
      - '.github/**'

jobs:
  test:
    name: "${{ matrix.python }} on ${{ matrix.platform }}"
    runs-on: "${{ matrix.platform }}"
    strategy:
      matrix:
        python:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
        platform:
          - "ubuntu-latest"
        exclude:
          # GHA runner has no ARM64 3.9
          - python: "3.9"
            platform: "macos-latest"
        include:
          - python: "3.11"
            platform: "macos-latest"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # https://github.com/actions/checkout/issues/249
          fetch-depth: 0
          submodules: true

      - name: Install the expect package
        if: startsWith(matrix.platform, 'ubuntu')
        run: |
          sudo apt-get install -y expect

      - name: Install tools on MacOS
        if: startsWith(matrix.platform, 'macos')
        run: |
          brew install expect coreutils bash

      - name: Setup Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: pip
          cache-dependency-path: |
            **/pyproject.toml
            **/requirements*.txt

      - name: Cache huggingface
        uses: actions/cache@v4
        with:
          path: ~/.cache/huggingface
          # config contains DEFAULT_MODEL
          key: huggingface-${{ hashFiles('src/instructlab/config.py') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox tox-gh>=1.2

      - name: Run unit and functional tests with tox
        run: tox

  test-workflow-complete:
    needs: ["test"]
    runs-on: ubuntu-latest
    steps:
      - name: Test Workflow Complete
        run: echo "Test Workflow Complete"
