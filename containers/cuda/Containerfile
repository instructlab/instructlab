# SPDX-License-Identifier: Apache-2.0

FROM nvcr.io/nvidia/cuda:12.3.2-devel-ubi9 as builder

RUN dnf update -y \
    && dnf install -y python3.11 python3.11-pip make gcc gcc-c++ git-core \
    && dnf clean all

WORKDIR /instruct-lab

RUN export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64" \
           CUDA_HOME=/usr/local/cuda \
           XLA_TARGET=cuda120 \
           XLA_FLAGS=--xla_gpu_cuda_data_dir=/usr/local/cuda \
    && python3.11 -m pip install --upgrade pip \
    && sed 's/\[.*\]//' instructlab/requirements.txt > constraints.txt \
    && CMAKE_ARGS="-DLLAMA_CUBLAS=on" python3.11 -m pip wheel --wheel-dir=/wheels -c constraints.txt llama-cpp-python \
    && python3.11 -m pip wheel --wheel-dir=/wheels -c constraints.txt instructlab/.

FROM nvcr.io/nvidia/cuda:12.3.2-runtime-ubi9

RUN dnf upgrade -y \
    && dnf install -y python3.11 python3.11-pip python3.11-devel git-core gcc cuda-cupti-12-3 \
    && dnf clean all \
    && groupadd -g 1001 ilab \
    && useradd -u 1001 -g 1001 -m -s /usr/bin/bash ilab

RUN python3.11 -m pip install --upgrade pip \
    && python3.11 -m pip install --no-index /wheels/*.whl

ENV CUDA_HOME="/usr/local/cuda"
ENV LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/compat:/usr/local/cuda/extras/CUPTI/lib64"
ENV PATH="$PATH:$CUDA_HOME/bin"

USER 1001
WORKDIR /home/ilab

ENTRYPOINT ["/usr/local/bin/ilab"]
